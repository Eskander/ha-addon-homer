name: Build Add-on

on:
  workflow_call:
    inputs:
      pr_number:
        type: string
        required: false
        description: "The PR number to build"
  push:
    branches:
      - release
    paths:
      - 'src/config.yaml'
      - 'src/Dockerfile'
      - 'src/rootfs/**'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build multi-arch add-on
    if: ${{ inputs.pr_number != '' || github.event_name == 'push' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ inputs.pr_number != '' && format('refs/pull/{0}/merge', inputs.pr_number) || github.ref }}

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./src"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags
        id: tags
        run: |
          IMAGE_NAME="ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
          VERSION="${{ steps.info.outputs.version }}"
          
          if [ "${{ inputs.pr_number }}" != "" ]; then
            # For CI builds (PR), only create a local tag
            TAGS="${IMAGE_NAME}:pr-${{ inputs.pr_number }}"
            PUSH="false"
          elif [ "${{ github.event_name }}" == "push" ]; then
            # For push to release, create versioned and latest tags
            TAGS="${IMAGE_NAME}:${VERSION},${IMAGE_NAME}:latest"
            PUSH="true"
          else
            # Fallback for pull requests
            TAGS="${IMAGE_NAME}:pr-${{ github.event.pull_request.number }}"
            PUSH="false"
          fi
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "push=${PUSH}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ steps.tags.outputs.push == 'true' }}
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
